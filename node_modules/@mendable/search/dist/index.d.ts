/// <reference types="react" />
import React from 'react';

interface MendableSearchStyle {
    darkMode: boolean;
    accentColor: string;
}
interface MendableSearchProps {
    anon_key: string;
    customSearchBar?: JSX.Element | undefined;
    floatingButtonEnabled?: boolean;
    style?: MendableSearchStyle;
    hintText?: string;
    openState?: boolean;
    setOpenState?: (openState: boolean) => void;
    showSimpleSearch?: boolean;
}
interface SearchBarProps {
    anon_key: string;
    placeholder?: string;
    onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;
    style?: MendableSearchStyle;
    cmdShortcutKey?: string;
    dialogPlaceholder?: string;
    showSimpleSearch?: boolean;
}
interface FloatingButtonProps {
    anon_key: string;
    style?: MendableSearchStyle;
    floatingButtonStyle?: FloatingButtonStyle;
    cmdShortcutKey?: string;
    showSimpleSearch?: boolean;
    dialogPlaceholder?: string;
}
interface FloatingButtonStyle {
    color: string;
    backgroundColor: string;
}

declare function MendableSearch({ anon_key, style, hintText, openState, setOpenState, showSimpleSearch, }: MendableSearchProps): JSX.Element;

declare function MendableSearchBar({ anon_key, placeholder, cmdShortcutKey, onKeyDown, style, dialogPlaceholder, showSimpleSearch, }: SearchBarProps): JSX.Element;

declare function MendableFloatingButton({ anon_key, style, floatingButtonStyle, cmdShortcutKey, showSimpleSearch, dialogPlaceholder }: FloatingButtonProps): JSX.Element;

export { MendableFloatingButton, MendableSearch, MendableSearchBar };
